---
import IconChevronLeft from "@/assets/icons/IconChevronLeft.svg";
import IconArrowNarrowUp from "@/assets/icons/IconArrowNarrowUp.svg";
---

<div
  id="btt-btn-container"
  class:list={[
    "fixed end-4 bottom-8 z-50",
    "md:fixed md:end-4 md:bottom-8",
    "translate-y-14 opacity-0 transition duration-500",
  ]}
>
  <button
    data-button="back-to-top"
    class:list={[
      "group relative bg-background px-2 py-1",
      "size-14 rounded-full shadow-xl",
      "md:h-8 md:w-fit md:rounded-md md:shadow-md md:focus-visible:rounded-none",
      "md:bg-background/90 md:bg-clip-padding md:backdrop-blur-lg",
    ]}
  >
    <span
      id="progress-indicator"
      class="absolute inset-0 -z-10 block size-14 scale-110 rounded-full bg-transparent md:hidden md:h-8 md:rounded-md"
    ></span>
    <IconChevronLeft class="inline-block rotate-90 md:hidden" />
    <span class="btt-text-content text-sm group-hover:text-accent">
      <IconArrowNarrowUp class="inline-block size-4" />
      Back To Top
    </span>
  </button>
</div>

<style>
  /* 确保BackToTopButton文字正确显示，不受外部CSS影响 */
  #btt-btn-container .btt-text-content {
    /* 移动端隐藏文字，只显示图标 */
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
    font-size: 0.875rem !important;
    line-height: 1.25rem !important;
  }
  
  /* 中等屏幕及以上显示文字 */
  @media (min-width: 768px) {
    #btt-btn-container .btt-text-content {
      position: static !important;
      width: auto !important;
      height: auto !important;
      padding: inherit !important;
      margin: inherit !important;
      overflow: visible !important;
      clip: auto !important;
      white-space: normal !important;
      border: inherit !important;
      display: inline-flex !important;
      align-items: center !important;
      gap: 0.25rem !important;
      font-size: 0.875rem !important;
      line-height: 1.25rem !important;
    }
  }
  
  /* 确保图标和文字在桌面端正确排列 */
  @media (min-width: 768px) {
    #btt-btn-container .btt-text-content svg {
      margin-right: 0.25rem !important;
      width: 1rem !important;
      height: 1rem !important;
      display: inline-block !important;
    }
  }
  
  /* 确保按钮本身的样式不受影响 */
  #btt-btn-container [data-button='back-to-top'] {
    cursor: pointer !important;
    transition: all 0.3s ease !important;
  }
  
  /* 确保进度指示器不受影响 */
  #btt-btn-container #progress-indicator {
    pointer-events: none !important;
  }
  
  /* 确保hover效果正常工作 */
  #btt-btn-container .group:hover .btt-text-content {
    color: var(--accent) !important;
  }
</style>

<script is:inline data-astro-rerun>
  /** Scrolls the document to the top when
   * the "Back to Top" button is clicked. */
  function backToTop() {
    const rootElement = document.documentElement;
    const btnContainer = document.querySelector("#btt-btn-container");
    const backToTopBtn = document.querySelector("[data-button='back-to-top']");
    const progressIndicator = document.querySelector("#progress-indicator");

    if (!rootElement || !btnContainer || !backToTopBtn || !progressIndicator)
      return;

    // Attach click event handler for back-to-top button
    backToTopBtn.addEventListener("click", () => {
      document.body.scrollTop = 0; // For Safari
      document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
    });

    // Handle button visibility according to scroll position
    let lastVisible = null;
    function handleScroll() {
      const scrollTotal = rootElement.scrollHeight - rootElement.clientHeight;
      const scrollTop = rootElement.scrollTop;
      const scrollPercent = Math.floor((scrollTop / scrollTotal) * 100);

      progressIndicator.style.setProperty(
        "background-image",
        `conic-gradient(var(--accent), var(--accent) ${scrollPercent}%, transparent ${scrollPercent}%)`
      );

      const isVisible = scrollTop / scrollTotal > 0.01;

      if (isVisible !== lastVisible) {
        btnContainer.classList.toggle("opacity-100", isVisible);
        btnContainer.classList.toggle("translate-y-0", isVisible);
        btnContainer.classList.toggle("opacity-0", !isVisible);
        btnContainer.classList.toggle("translate-y-14", !isVisible);
        lastVisible = isVisible;
      }
    }

    let ticking = false;
    document.addEventListener("scroll", () => {
      if (!ticking) {
        window.requestAnimationFrame(() => {
          handleScroll();
          ticking = false;
        });
        ticking = true;
      }
    });
  }
  backToTop();
</script>