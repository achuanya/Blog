---
import { getCollection } from "astro:content";
import Main from "@/layouts/Main.astro";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Card from "@/components/Card.astro";
import getPostsByGroupCondition from "@/utils/getPostsByGroupCondition";
import { SITE } from "@/config";

if (!SITE.showArchives) {
  return Astro.redirect("/404");
}

const posts = await getCollection("blog", ({ data }) => !data.draft);

const INITIAL_YEARS_TO_SHOW = SITE.archives.initialYearsToShow;
const YEARS_PER_PAGE = SITE.archives.yearsPerPage;

const yearGroups = getPostsByGroupCondition(posts, post =>
  post.data.pubDatetime.getFullYear()
);
const sortedYears = Object.entries(yearGroups)
  .sort(([yearA], [yearB]) => Number(yearB) - Number(yearA));

const archivesDataForClient = {
  allPosts: posts,
  siteTimezone: SITE.timezone,
  initialYearCount: INITIAL_YEARS_TO_SHOW,
  yearsPerPage: YEARS_PER_PAGE,
  enableLazyLoad: SITE.archives.enableLazyLoad,
};

const initialYears = sortedYears.slice(0, INITIAL_YEARS_TO_SHOW);
---

<Layout title={`归档 | ${SITE.title}`}>
  <Header />
  <Main pageTitle="Archives" pageDesc="">
    <div id="archives-container">
      {
        initialYears.map(([year, yearGroup]) => (
          <div class="year-section" data-year={year}>
            <span class="text-2xl font-bold">{year}</span>
            <sup class="text-sm">{yearGroup.length}</sup>
            <div class="flex flex-col sm:flex-row">
              <div class="mt-6 min-w-36 text-lg sm:my-6">
                {/* 保持原有的左侧空间以维持对齐 */}
              </div>
              <ul class="year-posts">
                {yearGroup
                  .sort(
                    (a, b) =>
                      Math.floor(
                        new Date(b.data.pubDatetime).getTime() / 1000
                      ) -
                      Math.floor(
                        new Date(a.data.pubDatetime).getTime() / 1000
                      )
                  )
                  .map(data => (
                    <Card {...data} showDescription={false} showCommentCount={false} showDatetime={false} compact={true} imageClass={"w-[55px] h-[55px] object-cover rounded-md group-hover:opacity-90 transition-opacity duration-300"} />
                  ))}
              </ul>
            </div>
          </div>
        ))
      }
    </div>
    {SITE.archives.enableLazyLoad && sortedYears.length > INITIAL_YEARS_TO_SHOW && (
      <div id="load-more-trigger" class="h-10"></div>
    )}
  </Main>
  <Footer />
</Layout>

<div id="archives-data-json-container" data-json={JSON.stringify(archivesDataForClient)} style="display: none;"></div>

<script>
  import { initArchives } from '@/scripts/archives.js';

  document.addEventListener('astro:page-load', () => {
    const dataElement = document.getElementById('archives-data-json-container');

    if (dataElement && dataElement.dataset.json) {
      try {
        const clientData = JSON.parse(dataElement.dataset.json);
        initArchives(
          clientData.allPosts,
          clientData.siteTimezone,
          clientData.initialYearCount,
          clientData.yearsPerPage,
          clientData.enableLazyLoad
        );
      } catch (e) {
        console.error("Failed to parse archives client data or initialize archives:", e);
      }
    }
  });
</script>